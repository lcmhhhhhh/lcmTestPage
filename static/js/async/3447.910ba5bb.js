"use strict";(self.webpackChunklcm_test_page=self.webpackChunklcm_test_page||[]).push([["3447"],{3149:function(n,e,s){s.r(e),s.d(e,{default:()=>i});var d=s(5893),r=s(65);function l(n){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",h3:"h3",ul:"ul",li:"li",strong:"strong",h4:"h4",ol:"ol",h5:"h5",pre:"pre",em:"em",hr:"hr"},(0,r.ah)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"cli-命令",children:["CLI 命令",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#cli-命令",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["VeCLI 支持几个内置命令，以帮助您管理会话、自定义界面和控制其行为。这些命令以正斜杠 (",(0,d.jsx)(e.code,{children:"/"}),")、at 符号 (",(0,d.jsx)(e.code,{children:"@"}),") 或感叹号 (",(0,d.jsx)(e.code,{children:"!"}),") 为前缀。"]}),"\n",(0,d.jsxs)(e.h2,{id:"斜杠命令-",children:["斜杠命令 (",(0,d.jsx)(e.code,{children:"/"}),")",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#斜杠命令-",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"斜杠命令提供对 CLI 本身的元级控制。"}),"\n",(0,d.jsxs)(e.h3,{id:"内置命令",children:["内置命令",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#内置命令",children:"#"})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/bug"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 提交关于 VeCLI 的问题。默认情况下，问题在 VeCLI 的 GitHub 存储库内提交。您在 ",(0,d.jsx)(e.code,{children:"/bug"})," 之后输入的字符串将成为提交的错误的标题。可以使用 ",(0,d.jsx)(e.code,{children:".ve/settings.json"})," 文件中的 ",(0,d.jsx)(e.code,{children:"advanced.bugCommand"})," 设置修改默认的 ",(0,d.jsx)(e.code,{children:"/bug"})," 行为。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/chat"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 交互式地保存和恢复对话历史，以实现分支对话状态，或从后续会话中恢复先前的状态。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"子命令："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"save"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 保存当前对话历史。您必须添加一个 ",(0,d.jsx)(e.code,{children:"<tag>"})," 来标识对话状态。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/chat save <tag>"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"关于检查点位置的详细信息："})," 保存的聊天检查点的默认位置是：","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["Linux/macOS: ",(0,d.jsx)(e.code,{children:"~/.ve/tmp/<project_hash>/"})]}),"\n",(0,d.jsxs)(e.li,{children:["Windows: ",(0,d.jsx)(e.code,{children:"C:\\Users\\<YourUsername>\\.ve\\tmp\\<project_hash>\\"})]}),"\n",(0,d.jsxs)(e.li,{children:["当您运行 ",(0,d.jsx)(e.code,{children:"/chat list"})," 时，CLI 只会扫描这些特定目录以查找可用的检查点。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注意："})," 这些检查点用于手动保存和恢复对话状态。有关在文件修改之前创建的自动检查点，请参阅 ",(0,d.jsx)(e.a,{href:"/zh/checkpointing",children:"检查点文档"}),"。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"resume"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 从先前的保存中恢复对话。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/chat resume <tag>"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"list"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 列出可用于恢复聊天状态的标签。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"delete"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 删除保存的对话检查点。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/chat delete <tag>"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/clear"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 清除终端屏幕，包括 CLI 中可见的会话历史和回滚。根据确切的实现，底层会话数据（用于历史回忆）可能会被保留，但视觉显示会被清除。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"键盘快捷键："})," 随时按 ",(0,d.jsx)(e.strong,{children:"Ctrl+L"})," 执行清除操作。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/compress"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 用摘要替换整个聊天上下文。这可以节省用于未来任务的令牌，同时保留已发生事件的高级摘要。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/copy"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 将 VeCLI 生成的最后一个输出复制到您的剪贴板，以便轻松共享或重用。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注意："})," 此命令需要安装特定于平台的剪贴板工具。","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["在 Linux 上，它需要 ",(0,d.jsx)(e.code,{children:"xclip"})," 或 ",(0,d.jsx)(e.code,{children:"xsel"}),"。您通常可以使用系统的包管理器安装它们。"]}),"\n",(0,d.jsxs)(e.li,{children:["在 macOS 上，它需要 ",(0,d.jsx)(e.code,{children:"pbcopy"}),"，在 Windows 上，它需要 ",(0,d.jsx)(e.code,{children:"clip"}),"。这些工具通常在其各自的系统上预安装。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/directory"})})," (或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/dir"})}),")"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 管理工作区目录以支持多目录。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"子命令："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"add"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 将目录添加到工作区。路径可以是绝对路径或相对于当前工作目录的路径。此外，还支持从主目录引用。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/directory add <path1>,<path2>"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注意："})," 在限制性沙盒配置文件中禁用。如果您正在使用该配置文件，请在启动会话时改用 ",(0,d.jsx)(e.code,{children:"--include-directories"}),"。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"show"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示由 ",(0,d.jsx)(e.code,{children:"/directory add"})," 和 ",(0,d.jsx)(e.code,{children:"--include-directories"})," 添加的所有目录。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/directory show"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/editor"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 打开一个对话框以选择支持的编辑器。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/extensions"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 列出当前 VeCLI 会话中的所有活动扩展。请参阅 ",(0,d.jsx)(e.a,{href:"/zh/extension",children:"VeCLI 扩展"}),"。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/help"})})," (或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/?"})}),")"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示有关 VeCLI 的帮助信息，包括可用命令及其用法。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/mcp"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 列出配置的模型上下文协议 (MCP) 服务器、其连接状态、服务器详细信息和可用工具。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"子命令："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"desc"})})," 或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"descriptions"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示 MCP 服务器和工具的详细描述。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"nodesc"})})," 或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"nodescriptions"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 隐藏工具描述，仅显示工具名称。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"schema"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示工具配置参数的完整 JSON 模式。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"键盘快捷键："})," 随时按 ",(0,d.jsx)(e.strong,{children:"Ctrl+T"})," 在显示和隐藏工具描述之间切换。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/memory"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 管理 AI 的指令上下文（从 ",(0,d.jsx)(e.code,{children:"VE.md"})," 文件加载的分层内存）。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"子命令："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"add"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 将以下文本添加到 AI 的内存中。用法: ",(0,d.jsx)(e.code,{children:"/memory add <要记住的文本>"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"show"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示从所有 ",(0,d.jsx)(e.code,{children:"VE.md"})," 文件加载的当前分层内存的完整连接内容。这使您可以检查提供给火山引擎模型的指令上下文。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"refresh"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 从配置位置（全局、项目/祖先和子目录）找到的所有 ",(0,d.jsx)(e.code,{children:"VE.md"})," 文件中重新加载分层指令内存。此命令使用最新的 ",(0,d.jsx)(e.code,{children:"VE.md"})," 内容更新模型。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注意："})," 有关 ",(0,d.jsx)(e.code,{children:"VE.md"})," 文件如何贡献于分层内存的更多详细信息，请参阅 ",(0,d.jsx)(e.a,{href:"/zh/cli/configuration#4-ve-files-hierarchical-instructional-context",children:"CLI 配置文档"}),"。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/restore"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 将项目文件恢复到执行工具之前的状态。这对于撤销工具进行的文件编辑特别有用。如果在没有工具调用 ID 的情况下运行，它将列出可用于恢复的检查点。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/restore [tool_call_id]"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注意："})," 仅在使用 ",(0,d.jsx)(e.code,{children:"--checkpointing"})," 选项调用 CLI 或通过 ",(0,d.jsx)(e.a,{href:"/zh/cli/configuration",children:"设置"})," 配置时可用。有关更多详细信息，请参阅 ",(0,d.jsx)(e.a,{href:"/zh/checkpointing",children:"检查点文档"}),"。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/settings"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 打开设置编辑器以查看和修改 VeCLI 设置。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"详细信息："})," 此命令提供了一个用户友好的界面，用于更改控制 VeCLI 行为和外观的设置。它等效于手动编辑 ",(0,d.jsx)(e.code,{children:".ve/settings.json"})," 文件，但具有验证和指导以防止错误。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," 只需运行 ",(0,d.jsx)(e.code,{children:"/settings"}),"，编辑器就会打开。然后您可以浏览或搜索特定设置，查看其当前值，并根据需要进行修改。某些设置的更改会立即应用，而其他设置则需要重新启动。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/stats"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示当前 VeCLI 会话的详细统计信息，包括令牌使用量、缓存令牌节省（如果可用）和会话持续时间。注意：仅在使用缓存令牌时才显示缓存令牌信息，这在使用 API 密钥身份验证时会发生，但目前在使用 OAuth 身份验证时不会发生。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.a,{href:"/zh/cli/themes",children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/theme"})})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 打开一个对话框，让您可以更改 VeCLI 的视觉主题。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/auth"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 打开一个对话框，让您可以更改身份验证方法。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/about"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示版本信息。请在提交问题时分享此信息。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.a,{href:"/zh/tools/index",children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/tools"})})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示当前在 VeCLI 中可用的工具列表。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用法："})," ",(0,d.jsx)(e.code,{children:"/tools [desc]"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"子命令："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"desc"})})," 或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"descriptions"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示每个工具的详细描述，包括每个工具的名称及其提供给模型的完整描述。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"nodesc"})})," 或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"nodescriptions"})}),":","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 隐藏工具描述，仅显示工具名称。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/privacy"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 显示隐私声明并允许用户选择是否同意为服务改进目的收集其数据。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/quit"})})," (或 ",(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/exit"})}),")"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 退出 VeCLI。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/vim"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 打开或关闭 vim 模式。启用 vim 模式时，输入区域支持 NORMAL 和 INSERT 模式下的 vim 风格导航和编辑命令。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"功能："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"NORMAL 模式："})," 使用 ",(0,d.jsx)(e.code,{children:"h"}),"、",(0,d.jsx)(e.code,{children:"j"}),"、",(0,d.jsx)(e.code,{children:"k"}),"、",(0,d.jsx)(e.code,{children:"l"})," 导航；使用 ",(0,d.jsx)(e.code,{children:"w"}),"、",(0,d.jsx)(e.code,{children:"b"}),"、",(0,d.jsx)(e.code,{children:"e"})," 按单词跳转；使用 ",(0,d.jsx)(e.code,{children:"0"}),"、",(0,d.jsx)(e.code,{children:"$"}),"、",(0,d.jsx)(e.code,{children:"^"})," 转到行首/行尾；使用 ",(0,d.jsx)(e.code,{children:"G"}),"（或 ",(0,d.jsx)(e.code,{children:"gg"})," 转到第一行）转到特定行"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"INSERT 模式："})," 标准文本输入，按 escape 返回 NORMAL 模式"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"编辑命令："})," 使用 ",(0,d.jsx)(e.code,{children:"x"})," 删除，使用 ",(0,d.jsx)(e.code,{children:"c"})," 更改，使用 ",(0,d.jsx)(e.code,{children:"i"}),"、",(0,d.jsx)(e.code,{children:"a"}),"、",(0,d.jsx)(e.code,{children:"o"}),"、",(0,d.jsx)(e.code,{children:"O"})," 插入；复杂的操作如 ",(0,d.jsx)(e.code,{children:"dd"}),"、",(0,d.jsx)(e.code,{children:"cc"}),"、",(0,d.jsx)(e.code,{children:"dw"}),"、",(0,d.jsx)(e.code,{children:"cw"})]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"计数支持："})," 用数字作为前缀命令（例如，",(0,d.jsx)(e.code,{children:"3h"}),"、",(0,d.jsx)(e.code,{children:"5w"}),"、",(0,d.jsx)(e.code,{children:"10G"}),"）"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"重复最后命令："})," 使用 ",(0,d.jsx)(e.code,{children:"."})," 重复最后的编辑操作"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"持久设置："})," Vim 模式偏好设置保存到 ",(0,d.jsx)(e.code,{children:"~/.ve/settings.json"})," 并在会话之间恢复"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"状态指示器："})," 启用时，在页脚中显示 ",(0,d.jsx)(e.code,{children:"[NORMAL]"})," 或 ",(0,d.jsx)(e.code,{children:"[INSERT]"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"/init"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 为了帮助用户轻松创建 ",(0,d.jsx)(e.code,{children:"VE.md"})," 文件，此命令分析当前目录并生成一个量身定制的上下文文件，使他们更容易向火山引擎代理提供项目特定的指令。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h3,{id:"自定义命令",children:["自定义命令",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义命令",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["有关快速入门，请参阅下面的 ",(0,d.jsx)(e.a,{href:"#example-a-pure-function-refactoring-command",children:"示例"}),"。"]}),"\n",(0,d.jsx)(e.p,{children:"自定义命令允许您将最喜欢或最常用的提示保存为 VeCLI 中的个人快捷方式。您可以创建特定于单个项目或在所有项目中全局可用的命令，从而简化您的工作流程并确保一致性。"}),"\n",(0,d.jsxs)(e.h4,{id:"文件位置和优先级",children:["文件位置和优先级",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#文件位置和优先级",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"VeCLI 从两个位置发现命令，按特定顺序加载："}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"用户命令 (全局):"})," 位于 ",(0,d.jsx)(e.code,{children:"~/.ve/commands/"}),"。这些命令在您处理的任何项目中都可用。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"项目命令 (本地):"})," 位于 ",(0,d.jsx)(e.code,{children:"~/.ve/commands/"}),"。这些命令特定于当前项目，可以签入版本控制以与您的团队共享。"]}),"\n"]}),"\n",(0,d.jsxs)(e.p,{children:["如果项目目录中的命令与用户目录中的命令同名，则",(0,d.jsx)(e.strong,{children:"始终使用项目命令。"})," 这允许项目用特定于项目的版本覆盖全局命令。"]}),"\n",(0,d.jsxs)(e.h4,{id:"命名和命名空间",children:["命名和命名空间",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#命名和命名空间",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["命令的名称由其相对于其 ",(0,d.jsx)(e.code,{children:"commands"})," 目录的文件路径确定。子目录用于创建命名空间命令，路径分隔符 (",(0,d.jsx)(e.code,{children:"/"})," 或 ",(0,d.jsx)(e.code,{children:"\\\\"}),") 转换为冒号 (",(0,d.jsx)(e.code,{children:":"}),")。"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"~/.ve/commands/test.toml"})," 文件成为命令 ",(0,d.jsx)(e.code,{children:"/test"}),"。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"<project>/.ve/commands/git/commit.toml"})," 文件成为命名空间命令 ",(0,d.jsx)(e.code,{children:"/git:commit"}),"。"]}),"\n"]}),"\n",(0,d.jsxs)(e.h4,{id:"toml-文件格式-v1",children:["TOML 文件格式 (v1)",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#toml-文件格式-v1",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["您的命令定义文件必须以 TOML 格式编写并使用 ",(0,d.jsx)(e.code,{children:".toml"})," 文件扩展名。"]}),"\n",(0,d.jsxs)(e.h5,{id:"必需字段",children:["必需字段",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#必需字段",children:"#"})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"prompt"})," (字符串): 执行命令时发送给火山引擎模型的提示。这可以是单行或多行字符串。"]}),"\n"]}),"\n",(0,d.jsxs)(e.h5,{id:"可选字段",children:["可选字段",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#可选字段",children:"#"})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"description"})," (字符串): 命令功能的简短一行描述。此文本将显示在 ",(0,d.jsx)(e.code,{children:"/help"})," 菜单中您的命令旁边。",(0,d.jsx)(e.strong,{children:"如果您省略此字段，将从文件名生成通用描述。"})]}),"\n"]}),"\n",(0,d.jsxs)(e.h4,{id:"处理参数",children:["处理参数",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#处理参数",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["自定义命令支持两种强大的参数处理方法。CLI 根据命令 ",(0,d.jsx)(e.code,{children:"prompt"})," 的内容自动选择正确的方法。"]}),"\n",(0,d.jsxs)(e.h5,{id:"1-使用-args-的上下文感知注入",children:["1. 使用 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 的上下文感知注入",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-使用-args-的上下文感知注入",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["如果您的 ",(0,d.jsx)(e.code,{children:"prompt"})," 包含特殊占位符 ",(0,d.jsx)(e.code,{children:"{{args}}"}),"，CLI 将用用户在命令名称后键入的文本替换该占位符。"]}),"\n",(0,d.jsx)(e.p,{children:"这种注入的行为取决于其使用位置："}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"A. 原始注入 (在 Shell 命令外部)"})}),"\n",(0,d.jsx)(e.p,{children:"在提示的主体中使用时，参数会按用户键入的方式精确注入。"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["示例 (",(0,d.jsx)(e.code,{children:"git/fix.toml"}),"):"]})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'# 通过: /git:fix "按钮未对齐" 调用\n\ndescription = "为给定问题生成修复。"\nprompt = "请为这里描述的问题提供代码修复: {{args}}。"\n'})}),"\n",(0,d.jsxs)(e.p,{children:["模型收到: ",(0,d.jsx)(e.code,{children:'请为这里描述的问题提供代码修复: "按钮未对齐"。'})]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["B. 在 Shell 命令中使用参数 (在 ",(0,d.jsx)(e.code,{children:"!{...}"})," 块内)"]})}),"\n",(0,d.jsxs)(e.p,{children:["当您在 shell 注入块 (",(0,d.jsx)(e.code,{children:"!{...}"}),") 内使用 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 时，参数在替换前会自动",(0,d.jsx)(e.strong,{children:"进行 shell 转义"}),"。这允许您安全地将参数传递给 shell 命令，确保生成的命令在语法上正确且安全，同时防止命令注入漏洞。"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["示例 (",(0,d.jsx)(e.code,{children:"/grep-code.toml"}),"):"]})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'prompt = """\n请总结模式 `{{args}}` 的发现。\n\n搜索结果:\n!{grep -r {{args}} .}\n"""\n'})}),"\n",(0,d.jsxs)(e.p,{children:["当您运行 ",(0,d.jsx)(e.code,{children:"/grep-code It's complicated"})," 时："]}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["CLI 看到 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 在 ",(0,d.jsx)(e.code,{children:"!{...}"})," 的内外都使用了。"]}),"\n",(0,d.jsxs)(e.li,{children:["外部: 第一个 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 被原始替换为 ",(0,d.jsx)(e.code,{children:"It's complicated"}),"。"]}),"\n",(0,d.jsxs)(e.li,{children:["内部: 第二个 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 被替换为转义版本（例如，在 Linux 上: ",(0,d.jsx)(e.code,{children:'"It\'s complicated"'}),"）。"]}),"\n",(0,d.jsxs)(e.li,{children:["执行的命令是 ",(0,d.jsx)(e.code,{children:'grep -r "It\'s complicated" .'}),"。"]}),"\n",(0,d.jsx)(e.li,{children:"CLI 在执行前会提示您确认这个确切的安全命令。"}),"\n",(0,d.jsx)(e.li,{children:"最终提示被发送。"}),"\n"]}),"\n",(0,d.jsxs)(e.h5,{id:"2-默认参数处理",children:["2. 默认参数处理",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-默认参数处理",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["如果您的 ",(0,d.jsx)(e.code,{children:"prompt"})," ",(0,d.jsx)(e.strong,{children:"不"}),"包含特殊占位符 ",(0,d.jsx)(e.code,{children:"{{args}}"}),"，CLI 使用默认行为来处理参数。"]}),"\n",(0,d.jsxs)(e.p,{children:["如果您为命令提供参数（例如，",(0,d.jsx)(e.code,{children:"/mycommand arg1"}),"），CLI 会将您键入的完整命令附加到提示的末尾，用两个换行符分隔。这允许模型看到原始指令和您刚刚提供的特定参数。"]}),"\n",(0,d.jsxs)(e.p,{children:["如果您",(0,d.jsx)(e.strong,{children:"不"}),"提供任何参数（例如，",(0,d.jsx)(e.code,{children:"/mycommand"}),"），提示会按原样发送给模型，不附加任何内容。"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["示例 (",(0,d.jsx)(e.code,{children:"changelog.toml"}),"):"]})}),"\n",(0,d.jsx)(e.p,{children:"此示例展示了如何通过为模型定义角色、解释在哪里找到用户输入以及指定预期格式和行为来创建一个强大的命令。"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'# 在: <project>/.ve/commands/changelog.toml\n# 通过: /changelog 1.2.0 added "支持默认参数解析。" 调用\n\ndescription = "向项目的 CHANGELOG.md 文件添加新条目。"\nprompt = """\n# 任务: 更新变更日志\n\n您是此软件项目的专家维护者。用户已调用一个命令来向变更日志添加新条目。\n\n**用户的原始命令附加在您的指令下方。**\n\n您的任务是从他们的输入中解析 `<version>`、`<change_type>` 和 `<message>`，并使用 `write_file` 工具正确更新 `CHANGELOG.md` 文件。\n\n## 预期格式\n命令遵循此格式: `/changelog <version> <type> <message>`\n- `<type>` 必须是以下之一: "added"、"changed"、"fixed"、"removed"。\n\n## 行为\n1. 读取 `CHANGELOG.md` 文件。\n2. 找到指定 `<version>` 的部分。\n3. 在正确的 `<type>` 标题下添加 `<message>`。\n4. 如果版本或类型部分不存在，则创建它。\n5. 严格遵守 "Keep a Changelog" 格式。\n"""\n'})}),"\n",(0,d.jsxs)(e.p,{children:["当您运行 ",(0,d.jsx)(e.code,{children:'/changelog 1.2.0 added "新功能"'})," 时，发送给模型的最终文本将是原始提示，后跟两个换行符和您键入的命令。"]}),"\n",(0,d.jsxs)(e.h5,{id:"3-使用--执行-shell-命令",children:["3. 使用 ",(0,d.jsx)(e.code,{children:"!{...}"})," 执行 Shell 命令",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-使用--执行-shell-命令",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["您可以通过在 ",(0,d.jsx)(e.code,{children:"prompt"})," 中直接执行 shell 命令并注入其输出，使您的命令具有动态性。这对于从本地环境收集上下文（如读取文件内容或检查 Git 状态）非常理想。"]}),"\n",(0,d.jsx)(e.p,{children:"当自定义命令尝试执行 shell 命令时，VeCLI 现在会在继续之前提示您确认。这是一项安全措施，以确保只能运行预期的命令。"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"工作原理:"})}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"注入命令："})," 使用 ",(0,d.jsx)(e.code,{children:"!{...}"})," 语法。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"参数替换："})," 如果 ",(0,d.jsx)(e.code,{children:"{{args}}"})," 存在于块内，则会自动进行 shell 转义（参见上面的 ",(0,d.jsx)(e.a,{href:"#1-context-aware-injection-with-args",children:"上下文感知注入"}),"）。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"健壮解析："})," 解析器可以正确处理包含嵌套大括号的复杂 shell 命令，例如 JSON 有效载荷。",(0,d.jsx)(e.strong,{children:"注意："})," ",(0,d.jsx)(e.code,{children:"!{...}"})," 内的内容必须具有平衡的大括号 (",(0,d.jsx)(e.code,{children:"{"})," 和 ",(0,d.jsx)(e.code,{children:"}"}),")。如果需要执行包含不平衡大括号的命令，请考虑将它包装在外部脚本文件中，并在 ",(0,d.jsx)(e.code,{children:"!{...}"})," 块中调用该脚本。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"安全检查和确认："})," CLI 对最终的、已解析的命令（在参数转义和替换后）执行安全检查。将出现一个对话框，显示要执行的确切命令。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"执行和错误报告："})," 命令被执行。如果命令失败，注入到提示中的输出将包括错误消息 (stderr)，后跟状态行，例如，",(0,d.jsx)(e.code,{children:"[Shell 命令以代码 1 退出]"}),"。这有助于模型理解失败的上下文。"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["示例 (",(0,d.jsx)(e.code,{children:"git/commit.toml"}),"):"]})}),"\n",(0,d.jsx)(e.p,{children:"此命令获取暂存的 git diff，并使用它来要求模型编写提交消息。"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'# 在: <project>/.ve/commands/git/commit.toml\n# 通过: /git:commit 调用\n\ndescription = "基于暂存的更改生成 Git 提交消息。"\n\n# 提示使用 !{...} 执行命令并注入其输出。\nprompt = """\n请根据以下 git diff 生成一个 Conventional Commit 消息：\n\n```diff\n!{git diff --staged}\n```\n\n"""\n\n'})}),"\n",(0,d.jsxs)(e.p,{children:["当您运行 ",(0,d.jsx)(e.code,{children:"/git:commit"})," 时，CLI 首先执行 ",(0,d.jsx)(e.code,{children:"git diff --staged"}),"，然后在将最终的完整提示发送给模型之前，用该命令的输出替换 ",(0,d.jsx)(e.code,{children:"!{git diff --staged}"}),"。"]}),"\n",(0,d.jsxs)(e.h5,{id:"4-使用--注入文件内容",children:["4. 使用 ",(0,d.jsx)(e.code,{children:"@{...}"})," 注入文件内容",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4-使用--注入文件内容",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["您可以使用 ",(0,d.jsx)(e.code,{children:"@{...}"})," 语法直接将文件或目录列表的内容嵌入到您的提示中。这对于创建对特定文件进行操作的命令非常有用。"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"工作原理:"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"文件注入"}),": ",(0,d.jsx)(e.code,{children:"@{path/to/file.txt}"})," 被 ",(0,d.jsx)(e.code,{children:"file.txt"})," 的内容替换。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"多模态支持"}),": 如果路径指向受支持的图像（例如 PNG、JPEG）、PDF、音频或视频文件，它将被正确编码并作为多模态输入注入。其他二进制文件会被优雅地处理并跳过。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"目录列表"}),": ",(0,d.jsx)(e.code,{children:"@{path/to/dir}"})," 被遍历，目录内及其所有子目录中的每个文件都会插入到提示中。如果启用了，则会遵守 ",(0,d.jsx)(e.code,{children:".gitignore"})," 和 ",(0,d.jsx)(e.code,{children:".veignore"}),"。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"工作区感知"}),": 命令会在当前目录和任何其他工作区目录中搜索路径。如果在工作区内，绝对路径是允许的。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"处理顺序"}),": 使用 ",(0,d.jsx)(e.code,{children:"@{...}"})," 进行的文件内容注入在 shell 命令 (",(0,d.jsx)(e.code,{children:"!{...}"}),") 和参数替换 (",(0,d.jsx)(e.code,{children:"{{args}}"}),") 之前进行处理。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"解析"}),": 解析器要求 ",(0,d.jsx)(e.code,{children:"@{...}"})," 内的内容（路径）具有平衡的大括号 (",(0,d.jsx)(e.code,{children:"{"})," 和 ",(0,d.jsx)(e.code,{children:"}"}),")。"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:["示例 (",(0,d.jsx)(e.code,{children:"review.toml"}),"):"]})}),"\n",(0,d.jsxs)(e.p,{children:["此命令注入一个 ",(0,d.jsx)(e.em,{children:"固定"})," 的最佳实践文件 (",(0,d.jsx)(e.code,{children:"docs/best-practices.md"}),") 的内容，并使用用户的参数为审查提供上下文。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'# 在: <project>/.ve/commands/review.toml\n# 通过: /review FileCommandLoader.ts 调用\n\ndescription = "使用最佳实践指南审查提供的上下文。"\nprompt = """\n您是一位专家代码审查员。\n\n您的任务是审查 {{args}}。\n\n在提供您的审查时，请使用以下最佳实践：\n\n@{docs/best-practices.md}\n"""\n'})}),"\n",(0,d.jsxs)(e.p,{children:["当您运行 ",(0,d.jsx)(e.code,{children:"/review FileCommandLoader.ts"})," 时，",(0,d.jsx)(e.code,{children:"@{docs/best-practices.md}"})," 占位符被该文件的内容替换，",(0,d.jsx)(e.code,{children:"{{args}}"})," 被您提供的文本替换，然后将最终提示发送给模型。"]}),"\n",(0,d.jsx)(e.hr,{}),"\n",(0,d.jsxs)(e.h4,{id:"示例-纯函数-重构命令",children:['示例: "纯函数" 重构命令',(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#示例-纯函数-重构命令",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"让我们创建一个全局命令，要求模型重构一段代码。"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"1. 创建文件和目录:"})}),"\n",(0,d.jsxs)(e.p,{children:["首先，确保用户命令目录存在，然后创建一个 ",(0,d.jsx)(e.code,{children:"refactor"})," 子目录用于组织和最终的 TOML 文件。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-bash",children:"mkdir -p ~/.ve/commands/refactor\ntouch ~/.ve/commands/refactor/pure.toml\n"})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"2. 将内容添加到文件中:"})}),"\n",(0,d.jsxs)(e.p,{children:["在您的编辑器中打开 ",(0,d.jsx)(e.code,{children:"~/.ve/commands/refactor/pure.toml"})," 并添加以下内容。我们包括了可选的 ",(0,d.jsx)(e.code,{children:"description"})," 以获得最佳实践。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-toml",children:'# 在: ~/.ve/commands/refactor/pure.toml\n# 此命令将通过: /refactor:pure 调用\n\ndescription = "要求模型将当前上下文重构为纯函数。"\n\nprompt = """\n请分析我在当前上下文中提供的代码。\n将其重构为纯函数。\n\n您的响应应包括：\n1. 重构后的纯函数代码块。\n2. 对您所做的关键更改及其如何有助于纯净性的简要解释。\n"""\n'})}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:"3. 运行命令:"})}),"\n",(0,d.jsx)(e.p,{children:"就是这样！您现在可以在 CLI 中运行您的命令。首先，您可能会将一个文件添加到上下文中，然后调用您的命令："}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{children:"> @my-messy-function.js\n> /refactor:pure\n"})}),"\n",(0,d.jsx)(e.p,{children:"VeCLI 然后将执行在您的 TOML 文件中定义的多行提示。"}),"\n",(0,d.jsxs)(e.h2,{id:"at-命令-",children:["At 命令 (",(0,d.jsx)(e.code,{children:"@"}),")",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#at-命令-",children:"#"})]}),"\n",(0,d.jsx)(e.p,{children:"At 命令用于将文件或目录的内容作为您对火山引擎的提示的一部分包含进来。这些命令包括 git 感知过滤。"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"@<文件或目录的路径>"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 将指定文件或文件的内容注入到您的当前提示中。这对于询问有关特定代码、文本或文件集合的问题很有用。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"示例："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"@path/to/your/file.txt 解释这段文本。"})}),"\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"@src/my_project/ 总结此目录中的代码。"})}),"\n",(0,d.jsx)(e.li,{children:(0,d.jsx)(e.code,{children:"这个文件是关于什么的？ @README.md"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"详细信息："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"如果提供了单个文件的路径，则读取该文件的内容。"}),"\n",(0,d.jsx)(e.li,{children:"如果提供了目录的路径，则命令会尝试读取该目录及其任何子目录中的文件内容。"}),"\n",(0,d.jsxs)(e.li,{children:["路径中的空格应使用反斜杠进行转义（例如，",(0,d.jsx)(e.code,{children:"@My\\\\ Documents/file.txt"}),"）。"]}),"\n",(0,d.jsxs)(e.li,{children:["该命令在内部使用 ",(0,d.jsx)(e.code,{children:"read_many_files"})," 工具。内容被获取，然后在发送到  模型之前插入到您的查询中。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"Git 感知过滤："})," 默认情况下，git 忽略的文件（如 ",(0,d.jsx)(e.code,{children:"node_modules/"}),"、",(0,d.jsx)(e.code,{children:"dist/"}),"、",(0,d.jsx)(e.code,{children:".env"}),"、",(0,d.jsx)(e.code,{children:".git/"}),"）会被排除。可以通过 ",(0,d.jsx)(e.code,{children:"context.fileFiltering"})," 设置更改此行为。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"文件类型："})," 该命令适用于基于文本的文件。虽然它可能会尝试读取任何文件，但底层的 ",(0,d.jsx)(e.code,{children:"read_many_files"})," 工具可能会跳过或截断二进制文件或非常大的文件，以确保性能和相关性。该工具会指示哪些文件被跳过。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"输出："})," CLI 将显示一条工具调用消息，指示使用了 ",(0,d.jsx)(e.code,{children:"read_many_files"}),"，以及一条详细说明状态和处理路径的消息。"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:["**",(0,d.jsx)(e.code,{children:"@"})," (单独的 at 符号)"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 如果您输入一个单独的 ",(0,d.jsx)(e.code,{children:"@"})," 符号而没有路径，查询将按原样传递给火山引擎模型。如果您在提示中特别谈论 ",(0,d.jsx)(e.code,{children:"@"})," 符号，这可能很有用。"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h3,{id:"-命令的错误处理",children:[(0,d.jsx)(e.code,{children:"@"})," 命令的错误处理",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#-命令的错误处理",children:"#"})]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["如果 ",(0,d.jsx)(e.code,{children:"@"})," 之后指定的路径未找到或无效，将显示错误消息，并且查询可能不会发送到  模型，或者会在没有文件内容的情况下发送。"]}),"\n",(0,d.jsxs)(e.li,{children:["如果 ",(0,d.jsx)(e.code,{children:"read_many_files"})," 工具遇到错误（例如，权限问题），也会报告此错误。"]}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"shell-模式和直通命令-",children:["Shell 模式和直通命令 (",(0,d.jsx)(e.code,{children:"!"}),")",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#shell-模式和直通命令-",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"!"})," 前缀允许您直接从 VeCLI 内与系统的 shell 交互。"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.strong,{children:(0,d.jsx)(e.code,{children:"!<shell_command>"})})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 使用 ",(0,d.jsx)(e.code,{children:"bash"})," 在 Linux/macOS 上或使用 ",(0,d.jsx)(e.code,{children:"cmd.exe"})," 在 Windows 上执行给定的 ",(0,d.jsx)(e.code,{children:"<shell_command>"}),"。命令的任何输出或错误都会显示在终端中。"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"示例："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"!ls -la"})," (执行 ",(0,d.jsx)(e.code,{children:"ls -la"})," 并返回 VeCLI)"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"!git status"})," (执行 ",(0,d.jsx)(e.code,{children:"git status"})," 并返回 VeCLI)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.strong,{children:[(0,d.jsx)(e.code,{children:"!"})," (切换 shell 模式)"]})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"描述："})," 单独输入 ",(0,d.jsx)(e.code,{children:"!"})," 可切换 shell 模式。","\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"进入 shell 模式："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:'激活时，shell 模式使用不同的着色和 "Shell 模式指示器"。'}),"\n",(0,d.jsx)(e.li,{children:"在 shell 模式下，您键入的文本直接解释为 shell 命令。"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"退出 shell 模式："}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"退出时，UI 恢复到标准外观，正常的 VeCLI 行为恢复。"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsxs)(e.strong,{children:["所有 ",(0,d.jsx)(e.code,{children:"!"})," 用法的注意事项："]})," 您在 shell 模式下执行的命令具有与直接在终端中运行它们相同的权限和影响。"]}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.strong,{children:"环境变量："})," 当通过 ",(0,d.jsx)(e.code,{children:"!"})," 或在 shell 模式下执行命令时，",(0,d.jsx)(e.code,{children:"VECLI_CLI=1"})," 环境变量会在子进程的环境中设置。这允许脚本或工具检测它们是否在 VeCLI 内运行。"]}),"\n"]}),"\n"]})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(l,{...n})}):l(n)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["zh%2Fcli%2Fcommands.md"]={toc:[{text:"斜杠命令 (`/`)",id:"斜杠命令-",depth:2},{text:"内置命令",id:"内置命令",depth:3},{text:"自定义命令",id:"自定义命令",depth:3},{text:"文件位置和优先级",id:"文件位置和优先级",depth:4},{text:"命名和命名空间",id:"命名和命名空间",depth:4},{text:"TOML 文件格式 (v1)",id:"toml-文件格式-v1",depth:4},{text:"处理参数",id:"处理参数",depth:4},{text:'示例: "纯函数" 重构命令',id:"示例-纯函数-重构命令",depth:4},{text:"At 命令 (`@`)",id:"at-命令-",depth:2},{text:"`@` 命令的错误处理",id:"-命令的错误处理",depth:3},{text:"Shell 模式和直通命令 (`!`)",id:"shell-模式和直通命令-",depth:2}],title:"CLI 命令",headingTitle:"CLI 命令",frontmatter:{}}}}]);