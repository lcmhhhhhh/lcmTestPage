"use strict";(self.webpackChunklcm_test_page=self.webpackChunklcm_test_page||[]).push([["3046"],{4402:function(e,n,s){s.r(n),s.d(n,{default:()=>i});var r=s(5893),c=s(65);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",blockquote:"blockquote",strong:"strong",h2:"h2",code:"code",ol:"ol",li:"li",ul:"ul",pre:"pre",h3:"h3",h4:"h4"},(0,c.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"企业版-vecli",children:["企业版 VeCLI",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#企业版-vecli",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"本文档概述了在企业环境中部署和管理 VeCLI 的配置模式和最佳实践。通过利用系统级设置，管理员可以强制执行安全策略、管理工具访问并确保所有用户的一致体验。"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"安全说明："})," 本文档中描述的模式旨在帮助管理员为使用 VeCLI 创建更受控制和安全的环境。但是，它们不应被视为万无一失的安全边界。一个拥有足够本地机器权限的 determined 用户可能仍然能够绕过这些配置。这些措施旨在防止意外误用并在受管理的环境中强制执行公司策略，而不是防御拥有本地管理权限的恶意行为者。"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"集中配置系统设置文件",children:["集中配置：系统设置文件",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#集中配置系统设置文件",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["企业管理员最强大的工具是系统范围的设置文件。这些文件允许您定义基线配置 (",(0,r.jsx)(n.code,{children:"system-defaults.json"}),") 和一组适用于机器上所有用户的覆盖 (",(0,r.jsx)(n.code,{children:"settings.json"}),")。有关配置选项的完整概述，请参阅 ",(0,r.jsx)(n.a,{href:"/zh/cli/configuration",children:"配置文档"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:["设置从四个文件中合并。单值设置（如 ",(0,r.jsx)(n.code,{children:"theme"}),"）的优先级顺序为："]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["系统默认值 (",(0,r.jsx)(n.code,{children:"system-defaults.json"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["用户设置 (",(0,r.jsx)(n.code,{children:"~/.ve/settings.json"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["工作区设置 (",(0,r.jsx)(n.code,{children:"<project>/.ve/settings.json"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["系统覆盖 (",(0,r.jsx)(n.code,{children:"settings.json"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["这意味着系统覆盖文件具有最终决定权。对于数组 (",(0,r.jsx)(n.code,{children:"includeDirectories"}),") 或对象 (",(0,r.jsx)(n.code,{children:"mcpServers"}),") 的设置，值会被合并。"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"合并和优先级示例："})}),"\n",(0,r.jsx)(n.p,{children:"以下是不同级别设置如何组合的示例。"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["系统默认值 ",(0,r.jsx)(n.code,{children:"system-defaults.json"}),"："]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui": {\n    "theme": "default-corporate-theme"\n  },\n  "context": {\n    "includeDirectories": ["/etc/gemini-cli/common-context"]\n  }\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["用户 ",(0,r.jsx)(n.code,{children:"settings.json"})," (",(0,r.jsx)(n.code,{children:"~/.ve/settings.json"}),")："]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui": {\n    "theme": "user-preferred-dark-theme"\n  },\n  "mcpServers": {\n    "corp-server": {\n      "command": "/usr/local/bin/corp-server-dev"\n    },\n    "user-tool": {\n      "command": "npm start --prefix ~/tools/my-tool"\n    }\n  },\n  "context": {\n    "includeDirectories": ["~/gemini-context"]\n  }\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["工作区 ",(0,r.jsx)(n.code,{children:"settings.json"})," (",(0,r.jsx)(n.code,{children:"<project>/.ve/settings.json"}),")："]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui": {\n    "theme": "project-specific-light-theme"\n  },\n  "mcpServers": {\n    "project-tool": {\n      "command": "npm start"\n    }\n  },\n  "context": {\n    "includeDirectories": ["./project-context"]\n  }\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["系统覆盖 ",(0,r.jsx)(n.code,{children:"settings.json"}),"："]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui": {\n    "theme": "system-enforced-theme"\n  },\n  "mcpServers": {\n    "corp-server": {\n      "command": "/usr/local/bin/corp-server-prod"\n    }\n  },\n  "context": {\n    "includeDirectories": ["/etc/gemini-cli/global-context"]\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"这会导致以下合并配置："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"最终合并配置："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ui": {\n    "theme": "system-enforced-theme"\n  },\n  "mcpServers": {\n    "corp-server": {\n      "command": "/usr/local/bin/corp-server-prod"\n    },\n    "user-tool": {\n      "command": "npm start --prefix ~/tools/my-tool"\n    },\n    "project-tool": {\n      "command": "npm start"\n    }\n  },\n  "context": {\n    "includeDirectories": [\n      "/etc/gemini-cli/common-context",\n      "~/gemini-context",\n      "./project-context",\n      "/etc/gemini-cli/global-context"\n    ]\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"原因："})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"theme"})}),"：使用系统覆盖中的值 (",(0,r.jsx)(n.code,{children:"system-enforced-theme"}),")，因为它具有最高优先级。"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"mcpServers"})}),"：对象被合并。系统覆盖中的 ",(0,r.jsx)(n.code,{children:"corp-server"})," 定义优先于用户的定义。唯一的 ",(0,r.jsx)(n.code,{children:"user-tool"})," 和 ",(0,r.jsx)(n.code,{children:"project-tool"})," 被包含。"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"includeDirectories"})}),"：数组按系统默认值、用户、工作区和系统覆盖的顺序连接。"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"位置"}),"："]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Linux"}),"：",(0,r.jsx)(n.code,{children:"/etc/gemini-cli/settings.json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windows"}),"：",(0,r.jsx)(n.code,{children:"C:\\ProgramData\\gemini-cli\\settings.json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"macOS"}),"：",(0,r.jsx)(n.code,{children:"/Library/Application Support/GeminiCli/settings.json"})]}),"\n",(0,r.jsxs)(n.li,{children:["可以使用 ",(0,r.jsx)(n.code,{children:"GEMINI_CLI_SYSTEM_SETTINGS_PATH"})," 环境变量覆盖路径。"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"控制"}),"：此文件应由系统管理员管理，并使用适当的文件权限进行保护，以防止用户未经授权修改。"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"通过使用系统设置文件，您可以强制执行以下描述的安全和配置模式。"}),"\n",(0,r.jsxs)(n.h2,{id:"限制工具访问",children:["限制工具访问",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#限制工具访问",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["您可以通过控制 Gemini 模型可以使用哪些工具来显著增强安全性。这是通过 ",(0,r.jsx)(n.code,{children:"tools.core"})," 和 ",(0,r.jsx)(n.code,{children:"tools.exclude"})," 设置实现的。有关可用工具的列表，请参阅 ",(0,r.jsx)(n.a,{href:"/zh/tools/index",children:"工具文档"}),"。"]}),"\n",(0,r.jsxs)(n.h3,{id:"使用-coretools-进行允许列表",children:["使用 ",(0,r.jsx)(n.code,{children:"coreTools"})," 进行允许列表",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-coretools-进行允许列表",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"最安全的方法是将允许用户执行的工具和命令明确添加到允许列表中。这可以防止使用任何未在批准列表中的工具。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 仅允许安全的只读文件操作和列出文件。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tools": {\n    "core": ["ReadFileTool", "GlobTool", "ShellTool(ls)"]\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"使用-excludetools-进行阻止列表",children:["使用 ",(0,r.jsx)(n.code,{children:"excludeTools"})," 进行阻止列表",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-excludetools-进行阻止列表",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"或者，您可以将环境中被认为危险的特定工具添加到阻止列表中。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 防止使用 shell 工具删除文件。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tools": {\n    "exclude": ["ShellTool(rm -rf)"]\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"安全说明："})," 使用 ",(0,r.jsx)(n.code,{children:"excludeTools"})," 进行阻止列表不如使用 ",(0,r.jsx)(n.code,{children:"coreTools"})," 进行允许列表安全，因为它依赖于阻止已知的坏命令，而聪明的用户可能会找到绕过基于字符串的简单阻止的方法。",(0,r.jsx)(n.strong,{children:"建议使用允许列表方法。"})]}),"\n",(0,r.jsxs)(n.h2,{id:"管理自定义工具-mcp-服务器",children:["管理自定义工具 (MCP 服务器)",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#管理自定义工具-mcp-服务器",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["如果您的组织通过 ",(0,r.jsx)(n.a,{href:"/zh/core/tools-api",children:"模型上下文协议 (MCP) 服务器"})," 使用自定义工具，则必须了解如何管理服务器配置以有效应用安全策略。"]}),"\n",(0,r.jsxs)(n.h3,{id:"mcp-服务器配置如何合并",children:["MCP 服务器配置如何合并",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#mcp-服务器配置如何合并",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["VeCLI 从三个级别加载 ",(0,r.jsx)(n.code,{children:"settings.json"})," 文件：系统、工作区和用户。当涉及到 ",(0,r.jsx)(n.code,{children:"mcpServers"})," 对象时，这些配置会被",(0,r.jsx)(n.strong,{children:"合并"}),"："]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"合并："})," 来自所有三个级别的服务器列表被合并成一个单一列表。"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"优先级："})," 如果在多个级别定义了具有",(0,r.jsx)(n.strong,{children:"相同名称"}),"的服务器（例如，在系统和用户设置中都存在名为 ",(0,r.jsx)(n.code,{children:"corp-api"})," 的服务器），则使用最高优先级级别的定义。优先级顺序为：",(0,r.jsx)(n.strong,{children:"系统 > 工作区 > 用户"}),"。"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["这意味着用户",(0,r.jsx)(n.strong,{children:"无法"}),"覆盖已在系统级设置中定义的服务器定义。但是，他们",(0,r.jsx)(n.strong,{children:"可以"}),"添加具有唯一名称的新服务器。"]}),"\n",(0,r.jsxs)(n.h3,{id:"强制执行工具目录",children:["强制执行工具目录",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制执行工具目录",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"MCP 工具生态系统安全性取决于定义规范服务器并将它们的名称添加到允许列表的组合。"}),"\n",(0,r.jsxs)(n.h3,{id:"限制-mcp-服务器内的工具",children:["限制 MCP 服务器内的工具",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#限制-mcp-服务器内的工具",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["为了获得更高的安全性，尤其是在处理第三方 MCP 服务器时，您可以限制从服务器暴露给模型的特定工具。这是通过在服务器定义中使用 ",(0,r.jsx)(n.code,{children:"includeTools"})," 和 ",(0,r.jsx)(n.code,{children:"excludeTools"})," 属性来完成的。这允许您使用服务器工具的子集，而不允许潜在的危险工具。"]}),"\n",(0,r.jsxs)(n.p,{children:["遵循最小权限原则，强烈建议使用 ",(0,r.jsx)(n.code,{children:"includeTools"})," 创建一个仅包含必要工具的允许列表。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 仅允许来自第三方 MCP 服务器的 ",(0,r.jsx)(n.code,{children:"code-search"})," 和 ",(0,r.jsx)(n.code,{children:"get-ticket-details"})," 工具，即使该服务器提供其他工具如 ",(0,r.jsx)(n.code,{children:"delete-ticket"}),"。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "mcp": {\n    "allowed": ["third-party-analyzer"]\n  },\n  "mcpServers": {\n    "third-party-analyzer": {\n      "command": "/usr/local/bin/start-3p-analyzer.sh",\n      "includeTools": ["code-search", "get-ticket-details"]\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"更安全的模式在系统设置中定义并添加到允许列表",children:["更安全的模式：在系统设置中定义并添加到允许列表",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#更安全的模式在系统设置中定义并添加到允许列表",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["为了创建一个安全的、集中管理的工具目录，系统管理员",(0,r.jsx)(n.strong,{children:"必须"}),"在系统级 ",(0,r.jsx)(n.code,{children:"settings.json"})," 文件中执行以下两项操作："]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"定义完整配置"}),"：在 ",(0,r.jsx)(n.code,{children:"mcpServers"})," 对象中为每个已批准的服务器定义完整配置。这确保即使用户定义了同名服务器，安全的系统级定义也会优先。"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"添加名称"}),"：使用 ",(0,r.jsx)(n.code,{children:"mcp.allowed"})," 设置将这些服务器的名称添加到允许列表中。这是一个关键的安全步骤，可以防止用户运行任何不在该列表中的服务器。如果省略此设置，CLI 将合并并允许用户定义的任何服务器。"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["示例系统 ",(0,r.jsx)(n.code,{children:"settings.json"}),"："]})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"将所有已批准服务器的_名称_添加到允许列表中。\n这将防止用户添加自己的服务器。"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"为允许列表中的每个服务器提供规范的_定义_。"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "mcp": {\n    "allowed": ["corp-data-api", "source-code-analyzer"]\n  },\n  "mcpServers": {\n    "corp-data-api": {\n      "command": "/usr/local/bin/start-corp-api.sh",\n      "timeout": 5000\n    },\n    "source-code-analyzer": {\n      "command": "/usr/local/bin/start-analyzer.sh"\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["这种模式更安全，因为它同时使用了定义和允许列表。用户定义的任何服务器要么被系统定义覆盖（如果它有相同的名称），要么因为它的名称不在 ",(0,r.jsx)(n.code,{children:"mcp.allowed"})," 列表中而被阻止。"]}),"\n",(0,r.jsxs)(n.h3,{id:"较不安全的模式省略允许列表",children:["较不安全的模式：省略允许列表",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#较不安全的模式省略允许列表",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["如果管理员定义了 ",(0,r.jsx)(n.code,{children:"mcpServers"})," 对象但未能同时指定 ",(0,r.jsx)(n.code,{children:"mcp.allowed"})," 允许列表，则用户可能会添加自己的服务器。"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["示例系统 ",(0,r.jsx)(n.code,{children:"settings.json"}),"："]})}),"\n",(0,r.jsx)(n.p,{children:'此配置定义了服务器但未强制执行允许列表。\n管理员未包含 "mcp.allowed" 设置。'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "corp-data-api": {\n      "command": "/usr/local/bin/start-corp-api.sh"\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["在这种情况下，用户可以在他们的本地 ",(0,r.jsx)(n.code,{children:"settings.json"})," 中添加自己的服务器。由于没有 ",(0,r.jsx)(n.code,{children:"mcp.allowed"})," 列表来过滤合并结果，用户的服务器将被添加到可用工具列表中并被允许运行。"]}),"\n",(0,r.jsxs)(n.h2,{id:"强制执行沙盒以确保安全",children:["强制执行沙盒以确保安全",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#强制执行沙盒以确保安全",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"为了减轻潜在有害操作的风险，您可以强制所有工具执行都在沙盒中进行。沙盒在容器化环境中隔离工具执行。"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 强制所有工具执行都在 Docker 沙盒中进行。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tools": {\n    "sandbox": "docker"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["您还可以使用 ",(0,r.jsx)(n.code,{children:"--sandbox-image"})," 命令行参数指定自定义的强化 Docker 镜像，或者通过构建自定义的 ",(0,r.jsx)(n.code,{children:"sandbox.Dockerfile"})," 来实现，如 ",(0,r.jsx)(n.a,{href:"/zh/cli/configuration#sandboxing",children:"沙盒文档"})," 中所述。"]}),"\n",(0,r.jsxs)(n.h2,{id:"通过代理控制网络访问",children:["通过代理控制网络访问",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#通过代理控制网络访问",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["在具有严格网络策略的企业环境中，您可以配置 VeCLI 通过企业代理路由所有出站流量。这可以通过环境变量设置，但也可以通过 ",(0,r.jsx)(n.code,{children:"mcpServers"})," 配置为自定义工具强制执行。"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"示例（针对 MCP 服务器）："})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "proxied-server": {\n      "command": "node",\n      "args": ["mcp_server.js"],\n      "env": {\n        "HTTP_PROXY": "http://proxy.example.com:8080",\n        "HTTPS_PROXY": "http://proxy.example.com:8080"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"遥测和审计",children:["遥测和审计",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#遥测和审计",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["出于审计和监控目的，您可以配置 VeCLI 将遥测数据发送到中央位置。这使您能够跟踪工具使用情况和其他事件。有关更多信息，请参阅 ",(0,r.jsx)(n.a,{href:"/zh/telemetry",children:"遥测文档"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 启用遥测并将其发送到本地 OTLP 收集器。如果未指定 ",(0,r.jsx)(n.code,{children:"otlpEndpoint"}),"，它默认为 ",(0,r.jsx)(n.code,{children:"http://localhost:4317"}),"。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "telemetry": {\n    "enabled": true,\n    "target": "gcp",\n    "logPrompts": false\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"注意："})," 在企业环境中，请确保将 ",(0,r.jsx)(n.code,{children:"logPrompts"})," 设置为 ",(0,r.jsx)(n.code,{children:"false"}),"，以避免收集用户提示中的潜在敏感信息。"]}),"\n",(0,r.jsxs)(n.h2,{id:"身份验证",children:["身份验证",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#身份验证",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["您可以通过在系统级 ",(0,r.jsx)(n.code,{children:"settings.json"})," 文件中设置 ",(0,r.jsx)(n.code,{children:"enforcedAuthType"})," 来为所有用户强制执行特定的身份验证方法。这可以防止用户选择不同的身份验证方法。有关更多详细信息，请参阅 ",(0,r.jsx)(n.a,{href:"/zh/cli/authentication",children:"身份验证文档"}),"。"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"示例："})," 强制所有用户使用 Google 登录。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "enforcedAuthType": "oauth-personal"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"如果用户配置了不同的身份验证方法，系统将提示他们切换到强制的方法。在非交互模式下，如果配置的身份验证方法与强制的方法不匹配，CLI 将以错误退出。"}),"\n",(0,r.jsxs)(n.h2,{id:"综合应用示例系统-settingsjson",children:["综合应用：示例系统 ",(0,r.jsx)(n.code,{children:"settings.json"}),(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#综合应用示例系统-settingsjson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["以下是一个系统 ",(0,r.jsx)(n.code,{children:"settings.json"})," 文件的示例，它结合了上述几种模式，为 VeCLI 创建了一个安全、受控的环境。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "tools": {\n    "sandbox": "docker",\n    "core": [\n      "ReadFileTool",\n      "GlobTool",\n      "ShellTool(ls)",\n      "ShellTool(cat)",\n      "ShellTool(grep)"\n    ]\n  },\n  "mcp": {\n    "allowed": ["corp-tools"]\n  },\n  "mcpServers": {\n    "corp-tools": {\n      "command": "/opt/gemini-tools/start.sh",\n      "timeout": 5000\n    }\n  },\n  "telemetry": {\n    "enabled": true,\n    "target": "gcp",\n    "otlpEndpoint": "https://telemetry-prod.example.com:4317",\n    "logPrompts": false\n  },\n  "advanced": {\n    "bugCommand": {\n      "urlTemplate": "https://servicedesk.example.com/new-ticket?title={title}&details={info}"\n    }\n  },\n  "privacy": {\n    "usageStatisticsEnabled": false\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"此配置："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"强制所有工具执行都在 Docker 沙盒中进行。"}),"\n",(0,r.jsx)(n.li,{children:"严格使用允许列表，仅包含少量安全的 shell 命令和文件工具。"}),"\n",(0,r.jsx)(n.li,{children:"定义并允许一个企业 MCP 服务器用于自定义工具。"}),"\n",(0,r.jsx)(n.li,{children:"启用遥测以进行审计，但不记录提示内容。"}),"\n",(0,r.jsxs)(n.li,{children:["将 ",(0,r.jsx)(n.code,{children:"/bug"})," 命令重定向到内部工单系统。"]}),"\n",(0,r.jsx)(n.li,{children:"禁用常规使用统计信息收集。"}),"\n"]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}let i=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh%2Fcli%2Fenterprise.md"]={toc:[{text:"集中配置：系统设置文件",id:"集中配置系统设置文件",depth:2},{text:"限制工具访问",id:"限制工具访问",depth:2},{text:"使用 `coreTools` 进行允许列表",id:"使用-coretools-进行允许列表",depth:3},{text:"使用 `excludeTools` 进行阻止列表",id:"使用-excludetools-进行阻止列表",depth:3},{text:"管理自定义工具 (MCP 服务器)",id:"管理自定义工具-mcp-服务器",depth:2},{text:"MCP 服务器配置如何合并",id:"mcp-服务器配置如何合并",depth:3},{text:"强制执行工具目录",id:"强制执行工具目录",depth:3},{text:"限制 MCP 服务器内的工具",id:"限制-mcp-服务器内的工具",depth:3},{text:"更安全的模式：在系统设置中定义并添加到允许列表",id:"更安全的模式在系统设置中定义并添加到允许列表",depth:4},{text:"较不安全的模式：省略允许列表",id:"较不安全的模式省略允许列表",depth:3},{text:"强制执行沙盒以确保安全",id:"强制执行沙盒以确保安全",depth:2},{text:"通过代理控制网络访问",id:"通过代理控制网络访问",depth:2},{text:"遥测和审计",id:"遥测和审计",depth:2},{text:"身份验证",id:"身份验证",depth:2},{text:"综合应用：示例系统 `settings.json`",id:"综合应用示例系统-settingsjson",depth:2}],title:"企业版 VeCLI",headingTitle:"企业版 VeCLI",frontmatter:{}}}}]);