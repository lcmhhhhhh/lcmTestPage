"use strict";(self.webpackChunklcm_test_page=self.webpackChunklcm_test_page||[]).push([["8961"],{6396:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var d=s(5893),r=s(65);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,r.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"集成测试",children:["集成测试",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#集成测试",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"本文档提供了有关本项目中使用的集成测试框架的信息。"}),"\n",(0,d.jsxs)(n.h2,{id:"概述",children:["概述",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#概述",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"集成测试旨在验证 VeCLI 的端到端功能。它们在受控环境中执行构建的二进制文件，并验证其在与文件系统交互时的行为是否符合预期。"}),"\n",(0,d.jsxs)(n.p,{children:["这些测试位于 ",(0,d.jsx)(n.code,{children:"integration-tests"})," 目录中，并使用自定义测试运行器运行。"]}),"\n",(0,d.jsxs)(n.h2,{id:"运行测试",children:["运行测试",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行测试",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["集成测试不作为默认 ",(0,d.jsx)(n.code,{children:"npm run test"})," 命令的一部分运行。它们必须使用 ",(0,d.jsx)(n.code,{children:"npm run test:integration:all"})," 脚本显式运行。"]}),"\n",(0,d.jsx)(n.p,{children:"集成测试也可以使用以下快捷方式运行："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:e2e\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"运行特定的测试集",children:["运行特定的测试集",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行特定的测试集",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["要运行测试文件的子集，您可以使用 ",(0,d.jsx)(n.code,{children:"npm run <integration test command> <file_name1> ...."}),"，其中 "," 是 ",(0,d.jsx)(n.code,{children:"test:e2e"})," 或 ",(0,d.jsx)(n.code,{children:"test:integration*"}),"，",(0,d.jsx)(n.code,{children:"<file_name>"})," 是 ",(0,d.jsx)(n.code,{children:"integration-tests/"})," 目录中的任何 ",(0,d.jsx)(n.code,{children:".test.js"})," 文件。例如，以下命令运行 ",(0,d.jsx)(n.code,{children:"list_directory.test.js"})," 和 ",(0,d.jsx)(n.code,{children:"write_file.test.js"}),"："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:e2e list_directory write_file\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"按名称运行单个测试",children:["按名称运行单个测试",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#按名称运行单个测试",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["要按名称运行单个测试，请使用 ",(0,d.jsx)(n.code,{children:"--test-name-pattern"})," 标志："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:'npm run test:e2e -- --test-name-pattern "reads a file"\n'})}),"\n",(0,d.jsxs)(n.h3,{id:"运行所有测试",children:["运行所有测试",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行所有测试",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"要运行整个集成测试套件，请使用以下命令："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:integration:all\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"沙盒矩阵",children:["沙盒矩阵",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#沙盒矩阵",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"all"})," 命令将运行 ",(0,d.jsx)(n.code,{children:"no sandboxing"}),"、",(0,d.jsx)(n.code,{children:"docker"})," 和 ",(0,d.jsx)(n.code,{children:"podman"})," 的测试。\n可以使用以下命令运行每种单独的类型："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:integration:sandbox:none\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:integration:sandbox:docker\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run test:integration:sandbox:podman\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"诊断",children:["诊断",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#诊断",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"集成测试运行器提供了几种诊断选项，以帮助追踪测试失败。"}),"\n",(0,d.jsxs)(n.h3,{id:"保留测试输出",children:["保留测试输出",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#保留测试输出",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"您可以保留测试运行期间创建的临时文件以供检查。这对于调试文件系统操作问题很有用。"}),"\n",(0,d.jsxs)(n.p,{children:["要保留测试输出，请将 ",(0,d.jsx)(n.code,{children:"KEEP_OUTPUT"})," 环境变量设置为 ",(0,d.jsx)(n.code,{children:"true"}),"。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"KEEP_OUTPUT=true npm run test:integration:sandbox:none\n"})}),"\n",(0,d.jsx)(n.p,{children:"当保留输出时，测试运行器将打印测试运行的唯一目录的路径。"}),"\n",(0,d.jsxs)(n.h3,{id:"详细输出",children:["详细输出",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#详细输出",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["对于更详细的调试，请将 ",(0,d.jsx)(n.code,{children:"VERBOSE"})," 环境变量设置为 ",(0,d.jsx)(n.code,{children:"true"}),"。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"VERBOSE=true npm run test:integration:sandbox:none\n"})}),"\n",(0,d.jsxs)(n.p,{children:["当在同一命令中使用 ",(0,d.jsx)(n.code,{children:"VERBOSE=true"})," 和 ",(0,d.jsx)(n.code,{children:"KEEP_OUTPUT=true"})," 时，输出会流式传输到控制台，并保存到测试临时目录中的日志文件中。"]}),"\n",(0,d.jsx)(n.p,{children:"详细输出的格式清晰地标识了日志的来源："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"--- TEST: <log dir>:<test-name> ---\n... 来自 gemini 命令的输出 ...\n--- END TEST: <log dir>:<test-name> ---\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"代码检查和格式化",children:["代码检查和格式化",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#代码检查和格式化",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"为了确保代码质量和一致性，集成测试文件作为主要构建过程的一部分进行代码检查。您也可以手动运行代码检查器和自动修复器。"}),"\n",(0,d.jsxs)(n.h3,{id:"运行代码检查器",children:["运行代码检查器",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行代码检查器",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"要检查代码检查错误，请运行以下命令："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run lint\n"})}),"\n",(0,d.jsxs)(n.p,{children:["您可以在命令中包含 ",(0,d.jsx)(n.code,{children:":fix"})," 标志以自动修复任何可修复的代码检查错误："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"npm run lint:fix\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"目录结构",children:["目录结构",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#目录结构",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["集成测试在 ",(0,d.jsx)(n.code,{children:".integration-tests"})," 目录内为每次测试运行创建一个唯一目录。在此目录中，为每个测试文件创建一个子目录，而在该子目录中，为每个单独的测试用例创建一个子目录。"]}),"\n",(0,d.jsx)(n.p,{children:"这种结构使得定位特定测试运行、文件或用例的工件变得容易。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:".integration-tests/\n└── <run-id>/\n    └── <test-file-name>.test.js/\n        └── <test-case-name>/\n            ├── output.log\n            └── ...其他测试工件...\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"持续集成",children:["持续集成",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#持续集成",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["为了确保始终运行集成测试，在 ",(0,d.jsx)(n.code,{children:".github/workflows/e2e.yml"})," 中定义了一个 GitHub Actions 工作流。该工作流会自动针对 ",(0,d.jsx)(n.code,{children:"main"})," 分支的拉取请求运行集成测试，或在拉取请求添加到合并队列时运行。"]}),"\n",(0,d.jsx)(n.p,{children:"该工作流在不同的沙盒环境中运行测试，以确保 VeCLI 在每个环境中都经过测试："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"sandbox:none"}),"：在没有任何沙盒的情况下运行测试。"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"sandbox:docker"}),"：在 Docker 容器中运行测试。"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"sandbox:podman"}),"：在 Podman 容器中运行测试。"]}),"\n"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(i,{...e})}):i(e)}let c=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["zh%2Fintegration-tests.md"]={toc:[{text:"概述",id:"概述",depth:2},{text:"运行测试",id:"运行测试",depth:2},{text:"运行特定的测试集",id:"运行特定的测试集",depth:2},{text:"按名称运行单个测试",id:"按名称运行单个测试",depth:3},{text:"运行所有测试",id:"运行所有测试",depth:3},{text:"沙盒矩阵",id:"沙盒矩阵",depth:3},{text:"诊断",id:"诊断",depth:2},{text:"保留测试输出",id:"保留测试输出",depth:3},{text:"详细输出",id:"详细输出",depth:3},{text:"代码检查和格式化",id:"代码检查和格式化",depth:2},{text:"运行代码检查器",id:"运行代码检查器",depth:3},{text:"目录结构",id:"目录结构",depth:2},{text:"持续集成",id:"持续集成",depth:2}],title:"集成测试",headingTitle:"集成测试",frontmatter:{}}}}]);