"use strict";(self.webpackChunklcm_test_page=self.webpackChunklcm_test_page||[]).push([["2218"],{8436:function(e,s,d){d.r(s),d.d(s,{default:()=>r});var n=d(5893),l=d(65);function c(e){let s=Object.assign({h1:"h1",code:"code",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",pre:"pre",em:"em"},(0,l.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"多文件读取工具-read_many_files",children:["多文件读取工具 (",(0,n.jsx)(s.code,{children:"read_many_files"}),")",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#多文件读取工具-read_many_files",children:"#"})]}),"\n",(0,n.jsxs)(s.p,{children:["本文档描述了 VeCLI 的 ",(0,n.jsx)(s.code,{children:"read_many_files"})," 工具。"]}),"\n",(0,n.jsxs)(s.h2,{id:"描述",children:["描述",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#描述",children:"#"})]}),"\n",(0,n.jsxs)(s.p,{children:["使用 ",(0,n.jsx)(s.code,{children:"read_many_files"})," 可以从由路径或 glob 模式指定的多个文件中读取内容。此工具的行为取决于提供的文件："]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"对于文本文件，此工具将其内容连接成一个字符串。"}),"\n",(0,n.jsx)(s.li,{children:"对于图像（例如 PNG、JPEG）、PDF、音频（MP3、WAV）和视频（MP4、MOV）文件，如果通过名称或扩展名明确请求，它会读取并以 base64 编码的数据形式返回。"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"read_many_files"})," 可用于执行诸如获取代码库概览、查找特定功能的实现位置、审阅文档或从多个配置文件中收集上下文等任务。"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"注意:"})," ",(0,n.jsx)(s.code,{children:"read_many_files"})," 会查找与提供的路径或 glob 模式匹配的文件。像 ",(0,n.jsx)(s.code,{children:'"/docs"'})," 这样的目录路径将返回空结果；该工具需要像 ",(0,n.jsx)(s.code,{children:'"/docs/*"'})," 或 ",(0,n.jsx)(s.code,{children:'"/docs/*.md"'})," 这样的模式来识别相关文件。"]}),"\n",(0,n.jsxs)(s.h3,{id:"参数",children:["参数",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#参数",children:"#"})]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"read_many_files"})," 接受以下参数："]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"paths"})," (字符串列表, 必需): 一个 glob 模式或相对于工具目标目录的路径数组（例如 ",(0,n.jsx)(s.code,{children:'["src/**/*.ts"]'}),"、",(0,n.jsx)(s.code,{children:'["README.md", "docs/*", "assets/logo.png"]'}),"）。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"exclude"})," (字符串列表, 可选): 要排除的文件/目录的 glob 模式（例如 ",(0,n.jsx)(s.code,{children:'["**/*.log", "temp/"]'}),"）。如果 ",(0,n.jsx)(s.code,{children:"useDefaultExcludes"})," 为 true，这些模式将添加到默认排除列表中。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"include"})," (字符串列表, 可选): 要包含的额外 glob 模式。这些模式将与 ",(0,n.jsx)(s.code,{children:"paths"})," 合并（例如 ",(0,n.jsx)(s.code,{children:'["*.test.ts"]'})," 用于特别添加测试文件如果它们被广泛排除，或者 ",(0,n.jsx)(s.code,{children:'["images/*.jpg"]'})," 用于包含特定图像类型）。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"recursive"})," (布尔值, 可选): 是否递归搜索。这主要由 glob 模式中的 ",(0,n.jsx)(s.code,{children:"**"})," 控制。默认为 ",(0,n.jsx)(s.code,{children:"true"}),"。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"useDefaultExcludes"})," (布尔值, 可选): 是否应用默认排除模式列表（例如 ",(0,n.jsx)(s.code,{children:"node_modules"}),"、",(0,n.jsx)(s.code,{children:".git"}),"、非图像/PDF 二进制文件）。默认为 ",(0,n.jsx)(s.code,{children:"true"}),"。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"respect_git_ignore"})," (布尔值, 可选): 查找文件时是否遵守 .gitignore 模式。默认为 true。"]}),"\n"]}),"\n",(0,n.jsxs)(s.h2,{id:"如何在-vecli-中使用-read_many_files",children:["如何在 VeCLI 中使用 ",(0,n.jsx)(s.code,{children:"read_many_files"}),(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#如何在-vecli-中使用-read_many_files",children:"#"})]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"read_many_files"})," 会搜索与提供的 ",(0,n.jsx)(s.code,{children:"paths"})," 和 ",(0,n.jsx)(s.code,{children:"include"})," 模式匹配的文件，同时遵守 ",(0,n.jsx)(s.code,{children:"exclude"})," 模式和默认排除列表（如果启用）。"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["对于文本文件：它读取每个匹配文件的内容（尝试跳过未明确请求为图像/PDF 的二进制文件）并将其连接成一个字符串，在每个文件的内容之间使用分隔符 ",(0,n.jsx)(s.code,{children:"--- {filePath} ---"}),"。默认使用 UTF-8 编码。"]}),"\n",(0,n.jsxs)(s.li,{children:["该工具在最后一个文件之后插入 ",(0,n.jsx)(s.code,{children:"--- End of content ---"}),"。"]}),"\n",(0,n.jsxs)(s.li,{children:["对于图像和 PDF 文件：如果通过名称或扩展名明确请求（例如 ",(0,n.jsx)(s.code,{children:'paths: ["logo.png"]'})," 或 ",(0,n.jsx)(s.code,{children:'include: ["*.pdf"]'}),"），该工具会读取文件并将其内容作为 base64 编码的字符串返回。"]}),"\n",(0,n.jsx)(s.li,{children:"该工具会通过检查初始内容中的空字节来尝试检测并跳过其他二进制文件。"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"用法:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'read_many_files(paths=["Your files or paths here."], include=["Additional files to include."], exclude=["Files to exclude."], recursive=False, useDefaultExcludes=false, respect_git_ignore=true)\n'})}),"\n",(0,n.jsxs)(s.h2,{id:"read_many_files-示例",children:[(0,n.jsx)(s.code,{children:"read_many_files"})," 示例",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#read_many_files-示例",children:"#"})]}),"\n",(0,n.jsxs)(s.p,{children:["读取 ",(0,n.jsx)(s.code,{children:"src"})," 目录中的所有 TypeScript 文件："]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'read_many_files(paths=["src/**/*.ts"])\n'})}),"\n",(0,n.jsxs)(s.p,{children:["读取主 README、",(0,n.jsx)(s.code,{children:"docs"})," 目录中的所有 Markdown 文件和一个特定的 logo 图像，排除一个特定文件："]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'read_many_files(paths=["README.md", "docs/**/*.md", "assets/logo.png"], exclude=["docs/OLD_README.md"])\n'})}),"\n",(0,n.jsxs)(s.p,{children:["读取所有 JavaScript 文件，但明确包含测试文件和 ",(0,n.jsx)(s.code,{children:"images"})," 文件夹中的所有 JPEG："]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'read_many_files(paths=["**/*.js"], include=["**/*.test.js", "images/**/*.jpg"], useDefaultExcludes=False)\n'})}),"\n",(0,n.jsxs)(s.h2,{id:"重要提示",children:["重要提示",(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#重要提示",children:"#"})]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"二进制文件处理:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"图像/PDF/音频/视频文件:"})," 该工具可以读取常见的图像类型（PNG、JPEG 等）、PDF、音频（mp3、wav）和视频（mp4、mov）文件，并以 base64 编码数据的形式返回。这些文件 ",(0,n.jsx)(s.em,{children:"必须"})," 通过 ",(0,n.jsx)(s.code,{children:"paths"})," 或 ",(0,n.jsx)(s.code,{children:"include"})," 模式明确指定（例如，通过指定确切的文件名如 ",(0,n.jsx)(s.code,{children:"video.mp4"})," 或模式如 ",(0,n.jsx)(s.code,{children:"*.mov"}),"）。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"其他二进制文件:"})," 该工具会通过检查初始内容中的空字节来尝试检测并跳过其他类型的二进制文件。该工具会从其输出中排除这些文件。"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"性能:"})," 读取大量文件或非常大的单个文件可能会占用大量资源。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"路径特异性:"})," 确保相对于工具目标目录正确指定路径和 glob 模式。对于图像/PDF 文件，确保模式足够具体以包含它们。"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"默认排除:"})," 注意默认排除模式（如 ",(0,n.jsx)(s.code,{children:"node_modules"}),"、",(0,n.jsx)(s.code,{children:".git"}),"），如果需要覆盖它们，请使用 ",(0,n.jsx)(s.code,{children:"useDefaultExcludes=False"}),"，但要谨慎操作。"]}),"\n"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,l.ah)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}let r=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh%2Ftools%2Fmulti-file.md"]={toc:[{text:"描述",id:"描述",depth:2},{text:"参数",id:"参数",depth:3},{text:"如何在 VeCLI 中使用 `read_many_files`",id:"如何在-vecli-中使用-read_many_files",depth:2},{text:"`read_many_files` 示例",id:"read_many_files-示例",depth:2},{text:"重要提示",id:"重要提示",depth:2}],title:"多文件读取工具 (`read_many_files`)",headingTitle:"多文件读取工具 (`read_many_files`)",frontmatter:{}}}}]);